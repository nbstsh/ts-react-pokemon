{"version":3,"sources":["components/PokemonDisplay/PokemonDisplay.module.scss","components/PokemonSearch/PokemonSearch.module.scss","components/PokemonDisplay/PokemonDisplay.component.tsx","components/PokemonSearch/PokemonSearch.component.tsx","App.tsx","serviceWorker.ts","index.tsx","App.module.scss"],"names":["module","exports","card","img","name","ability","experience","userInfo","input","button","errorMessage","PokemonDisplay","_ref","_ref$pokemon","pokemon","numberOfAbilities","baseExperience","imageUrl","react_default","a","createElement","className","style","src","alt","POKEMON_API","PokemonSearch","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchClick","asyncToGenerator","regenerator_default","mark","_callee","inputValue","res","data","wrap","_context","prev","next","state","abrupt","setState","error","fetch","concat","sent","status","json","abilities","length","base_experience","sprites","front_default","t0","stop","_this2","_this$props","numberOfPokemons","_this$state","type","value","onChange","e","target","onClick","PokemonDisplay_component","Component","App","app","PokemonSearch_component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b347f2cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"PokemonDisplay_card__fNPxF\",\"img\":\"PokemonDisplay_img__2aEO1\",\"name\":\"PokemonDisplay_name__3MMDJ\",\"ability\":\"PokemonDisplay_ability__3fvq4\",\"experience\":\"PokemonDisplay_experience__1U1ld\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userInfo\":\"PokemonSearch_userInfo__3cbYr\",\"input\":\"PokemonSearch_input__1v5gk\",\"button\":\"PokemonSearch_button__2Z6sa\",\"errorMessage\":\"PokemonSearch_errorMessage__1jpVB\"};","import React from 'react';\n\nimport style from './PokemonDisplay.module.scss';\n\nimport Pokemon from '../../interfaces/Pokemon.interface';\n\nexport interface Props {\n\tpokemon: Pokemon;\n}\n\nconst PokemonDisplay: React.SFC<Props> = ({\n\tpokemon: { name, numberOfAbilities, baseExperience, imageUrl }\n}) => {\n\treturn (\n\t\t<div className={style.card}>\n\t\t\t<img className={style.img} src={imageUrl} alt=\"pokemon image\" />\n\t\t\t<p className={style.name}>{name}</p>\n\t\t\t<p className={style.ability}>\n\t\t\t\tnumber of abilities: {numberOfAbilities}\n\t\t\t</p>\n\t\t\t<p className={style.experience}>\n\t\t\t\tbase experience: {baseExperience}\n\t\t\t</p>\n\t\t</div>\n\t);\n};\n\nexport default PokemonDisplay;\n","import React, { Component } from 'react';\n\nimport style from './PokemonSearch.module.scss';\n\nimport User from '../../interfaces/User.interface';\nimport Pokemon from '../../interfaces/Pokemon.interface';\nimport PokemonDisplay from '../PokemonDisplay/PokemonDisplay.component';\n\nconst POKEMON_API: string = 'https://pokeapi.co/api/v2/pokemon';\n\ninterface SearchState {\n\terror: string;\n\tinputValue: string;\n\tpokemon: Pokemon | null;\n}\n\nclass PokemonSearch extends Component<User, SearchState> {\n\tconstructor(props: User) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\terror: '',\n\t\t\tinputValue: '',\n\t\t\tpokemon: null\n\t\t};\n\t}\n\n\tonSearchClick = async () => {\n\t\tconst { inputValue } = this.state;\n\n\t\tif (!inputValue)\n\t\t\treturn this.setState({ error: 'Please provide pokemon name!' });\n\n\t\ttry {\n\t\t\tconst res = await fetch(`${POKEMON_API}/${inputValue}`);\n\t\t\tif (res.status !== 200)\n\t\t\t\treturn this.setState({ error: 'Something went wrong ...' });\n\n\t\t\tconst data = await res.json();\n\t\t\tif (!data)\n\t\t\t\treturn this.setState({\n\t\t\t\t\terror: 'Pokemon with given name was not found ....'\n\t\t\t\t});\n\n\t\t\tconst pokemon: Pokemon = {\n\t\t\t\tname: data.name,\n\t\t\t\tnumberOfAbilities: data.abilities.length,\n\t\t\t\tbaseExperience: data.base_experience,\n\t\t\t\timageUrl: data.sprites.front_default\n\t\t\t};\n\n\t\t\tthis.setState({ error: '', pokemon });\n\t\t} catch (e) {\n\t\t\tthis.setState({ error: 'Sometihng went wrong ...' });\n\t\t}\n\t};\n\n\trender() {\n\t\tconst { name, numberOfPokemons } = this.props;\n\t\tconst { error, inputValue, pokemon } = this.state;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<p className={style.userInfo}>\n\t\t\t\t\tUser {name}{' '}\n\t\t\t\t\t{numberOfPokemons && (\n\t\t\t\t\t\t<span>has {numberOfPokemons} pokemons!</span>\n\t\t\t\t\t)}\n\t\t\t\t</p>\n\t\t\t\t<p>Enter your favorite Pokemon name!</p>\n\t\t\t\t<input\n\t\t\t\t\tclassName={style.input}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={inputValue}\n\t\t\t\t\tonChange={e =>\n\t\t\t\t\t\tthis.setState({ inputValue: e.target.value })\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<button className={style.button} onClick={this.onSearchClick}>\n\t\t\t\t\tsearch\n\t\t\t\t</button>\n\t\t\t\t{error && <p className={style.errorMessage}>{error}</p>}\n\t\t\t\t{!error && pokemon && <PokemonDisplay pokemon={pokemon} />}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default PokemonSearch;\n","import React from 'react';\nimport style from './App.module.scss';\nimport PokemonSearch from './components/PokemonSearch/PokemonSearch.component';\n\nconst App: React.FC = () => {\n\treturn (\n\t\t<div className={style.app}>\n\t\t\t<PokemonSearch name=\"John Doe\" numberOfPokemons={5} />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2ziFi\"};"],"sourceRoot":""}